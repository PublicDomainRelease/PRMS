# Makefile for program prms
#
# History:  95/12/05 kmflynn

# pathname
WrdA = /usr/opt/wrdapp

# Compiler flags (Fortran - Green Hills):
#    C - check subranges and array bounds
#    u - default data type for undeclareds is undefined
#    g - generate source level symbolic debug information
#   OM - optimization
# (NOTE: set OptDbg to: OptM to generate optimized code
#                       DbgF to generate debug code)
DbgF   = -g
OptM   = -OM
OptDbg =
FFLAGS = -C -u $(OptDbg)

# Compiler name
F77 = f77

# this description file uses the Bourne shell
SHELL = /bin/sh

#*******************************************************************
#***** You should not need to modify anything below this line. *****
#*******************************************************************

# library directory
LibDir  = $(WrdA)/lib3.0/lib

program = prms

Objects = maint.o   prfile.o  tssget.o  precipt.o \
          snocovt.o smbalt.o  sumallt.o \
          datint.o  datoutt.o svhyd.o   invint.o  unroutt.o \
          optim1t.o optim2t.o probgn.o  probary.o setyr.o   \
          rddsn.o   sbasin.o
Libs    = $(LibDir)/wdmlib.a  $(LibDir)/adwdmlib.a $(LibDir)/utillib.a

BINDIR  = ../bin
binary  = ../bin
binMake = $(binary)/$(program)
binInst = $(BINDIR)/$(program)

# Rules
all:  first $(binMake) install
	@echo "\n"Done making all, files are now up to date."\n"

# program dependencies
$(binMake):  $(Objects) $(Libs)
	$(F77) $(Objects) $(Libs) -o $@

first:
	@if [ ! -d $(binary) ]   ; then        \
	   mkdir $(binary)  ;                  \
	   echo Created directory $(binary) ;  \
	fi
install:
# Create directory for binary file, if necessary
	@if [ ! -d $(BINDIR) ]   ; then        \
	   mkdir $(BINDIR) ;                   \
	   echo  Created directory $(BINDIR) ; \
	fi
# Link executable to BINDIR if installing elsewhere
	@if [ ! -s $(binMake) ] ; then                              \
	   echo program $(binMake) does not exist, ;                \
	   echo use one of the following commands to generate it:;  \
	   echo "     make" ;  echo "     make all" ;               \
	else                                                   \
	   if [ $(BINDIR) != $(binary) ] ; then                \
	      rm -f $(binInst) ;                               \
	      cd .. ; ln -s `pwd`/bin/$(program) $(binInst);   \
	      chmod 644 $(binInst) ;                           \
	      echo "\n"Program $(binInst) has been updated.;   \
	   fi ; \
	fi
clean:
	@if [ $(BINDIR) != $(binary) ] ; then rm -f $(binInst) ; fi
	rm -f *.o $(binMake)
	@echo Removed files generated by make."\n"

# Define object file dependencies:
datint.o:  call.inc   cbs.inc    cdates.inc cdatop.inc cdpr.inc   cdvdt.inc  \
           cet.inc    cgeo1.inc  cimprv.inc cjm.inc    copsno.inc copt.inc   \
           cpkadj.inc cplot.inc  cprobn.inc crd.inc    cscs.inc   csent3.inc \
           csize.inc  csm.inc    csncv.inc  csno.inc   csnop.inc  cstach.inc \
           cstor.inc  cswtch.inc cupr.inc   cwdsn.inc  cwx.inc
datoutt.o: call.inc   cdates.inc cjm.inc    copt.inc   cpcrch.inc cplot.inc  \
           csed.inc   csent3.inc csize.inc  cstach.inc cuntrf.inc cvol.inc
invint.o:  call.inc   cdates.inc cdtmn1.inc copt.inc   cpcrch.inc csed.inc   \
           csize.inc  cstor.inc  cswtch.inc cunss.inc  cuvrt.inc  cvol.inc
maint.o:   call.inc   cbs.inc    cdates.inc cdatop.inc cdpr.inc   cdsm.inc   \
           cdtmn1.inc cdumv.inc  cdvdt.inc  cet.inc    cgeo1.inc  cimprv.inc \
           cjm.inc    copsn2.inc copsno.inc copt.inc   cpkadj.inc cplot.inc  \
           cprobn.inc crd.inc    cscs.inc   csed.inc   csent.inc  csent3.inc \
           csize.inc  csncv.inc  csno.inc   csnop.inc  cstach.inc cstor.inc  \
           cswtch.inc cuvrt.inc  cvol.inc   cwdsn.inc  cwx.inc    versn.inc
optim1t.o: call.inc   cbs.inc    cdates.inc cdatop.inc cdpr.inc   cdvdt.inc  \
           cet.inc    copsn2.inc copsno.inc copt.inc   copt2.inc  cpcrch.inc \
           cplot.inc  crd.inc    csed.inc   csent.inc  csent1.inc csent2.inc \
           csent3.inc csize.inc  csm.inc    csncv.inc  csno.inc   csnop.inc  \
           cstor.inc  cswtch.inc cvol.inc   cwx.inc
optim2t.o: copt.inc   csent.inc  csent1.inc csent3.inc cvol.inc
precipt.o: call.inc   cdpr.inc   cdvdt.inc  cet.inc    cgeo1.inc  cjm.inc    \
           copsn2.inc copsno.inc csize.inc  csm.inc    csncv.inc  csno.inc   \
           csnop.inc  cupr.inc
prfile.o:  pinout.inc xrecl.inc
probary.o: cjm.inc    cprobn.inc
probgn.o:  call.inc   cbs.inc    cdates.inc cdpr.inc   cdvdt.inc  cet.inc    \
           cjm.inc    copsn2.inc copsno.inc copt.inc   cplot.inc  cprobn.inc \
           cscs.inc   csed.inc   csent.inc  csent1.inc csent2.inc csent3.inc \
           csize.inc  csm.inc    csncv.inc  csno.inc   cswtch.inc cvol.inc
rddsn.f:   csvwdm.inc
sbasin.o:  csbasn.inc
setyr.o:   cdates.inc cjm.inc    cprobn.inc cscs.inc   csize.inc
smbalt.o:  call.inc   cbs.inc    cdpr.inc   cimprv.inc csm.inc    csncv.inc  \
           csno.inc   csnop.inc  cswtch.inc cuvrt.inc  cvol.inc
snocovt.o: call.inc   csncv.inc  csno.inc   csnop.inc
sumallt.o: call.inc   cbs.inc    cdates.inc cdpr.inc   cdvdt.inc  cgeo1.inc  \
           cimprv.inc cjm.inc    copt.inc   cplot.inc  crd.inc    csed.inc   \
           csent.inc  csent2.inc csent3.inc csize.inc  csm.inc    csncv.inc  \
           csno.inc   csnop.inc  cstach.inc cstor.inc  csvwdm.inc cswtch.inc \
           cunss.inc  cupr.inc   cuvrt.inc  cwx.inc
svhyd.f:   cpcrch.inc
tssget.o:  call.inc   cdates.inc cdvdt.inc  copt.inc   cscs.inc   csize.inc  \
           cuvrt.inc  cwdsn.inc
unroutt.o: call.inc   cbs.inc    cdfhsg.inc cdpr.inc   cdsm.inc   cet.inc    \
           cimprv.inc cinitc.inc copt.inc   cpcrch.inc cplot.inc  cqsout.inc \
           csed.inc   csize.inc  csm.inc    cstach.inc cstor.inc  cswtch.inc \
           cunss.inc  cuntrf.inc cupr.inc   cvol.inc

# end of make
